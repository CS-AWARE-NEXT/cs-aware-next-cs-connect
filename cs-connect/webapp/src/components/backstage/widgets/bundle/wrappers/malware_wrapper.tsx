import React, {useContext} from 'react';
import {useLocation, useRouteMatch} from 'react-router-dom';
import qs from 'qs';

import {SectionContext} from 'src/components/rhs/rhs';
import {BundleObject} from 'src/types/bundles';
import Malware from 'src/components/backstage/widgets/bundle/malware';

type Props = {
    name?: string;
    url?: string;
};

const MalwareWrapper = ({
    name = 'Malware',
    url = '',
}: Props) => {
    const sectionContextOptions = useContext(SectionContext);
    const {params: {sectionId}} = useRouteMatch<{sectionId: string}>();
    const location = useLocation();
    const queryParams = qs.parse(location.search, {ignoreQueryPrefix: true});
    const parentIdParam = queryParams.parentId as string;

    const areSectionContextOptionsProvided = sectionContextOptions.parentId !== '' && sectionContextOptions.sectionId !== '';
    const parentId = areSectionContextOptionsProvided ? sectionContextOptions.parentId : parentIdParam;
    const sectionIdForUrl = areSectionContextOptionsProvided ? sectionContextOptions.sectionId : sectionId;

    const data: BundleObject = {
        type: 'malware',
        spec_version: '2.1',
        id: 'malware--162d917e-766f-4611-b5d6-652791454fca',
        created: '2014-06-30T09:15:17.182Z',
        modified: '2014-06-30T09:15:17.182Z',
        name: 'x4z9arb backdoor',
        description: 'This malware attempts to download remote files after establishing a foothold as a backdoor.',
        malware_types: [
            'backdoor',
            'remote-access-trojan',
        ],
        is_family: false,
        kill_chain_phases: [
            {
                kill_chain_name: 'mandiant-attack-lifecycle-model',
                phase_name: 'establish-foothold',
            },
        ],
    };

    return (
        <>
            {data &&
                <Malware
                    data={data}
                    name={name}
                    sectionId={sectionIdForUrl}
                    parentId={parentId}
                />}
        </>
    );
};

export default MalwareWrapper;